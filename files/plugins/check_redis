#!/usr/bin/env bash
#
# Dead simple script to check if Redis is UP
#
# Usage: check_redis.sh [-h host] [-p port] [-w warning] [-c critical]
#   -h, --host                  Redis host
#   -p, --port                  Redis port, eg: 6379
#   -w, --warning WARNING       Warning value (percent)
#   -c, --critical CRITICAL     Critical value (percent)
#   -H, --help                  Display this screen
#
# (c) 2014, Benjamin Dos Santos <benjamin.dossantos@gmail.com>
# https://github.com/bdossantos/nagios-plugins
#

while [[ -n "$1" ]]; do
  case $1 in
    --host | -h)
      redis_host=$2
      shift
      ;;
    --port | -p)
      redis_port=$2
      shift
      ;;
    --help | -H)
      sed -n '2,11p' "$0" | tr -d '#'
      exit 3
      ;;
    *)
      echo "Unknown argument: $1"
      exec "$0" --help
      exit 3
      ;;
  esac
  shift
done

check_dependency() {

  NC=$(command -v nc)

  if [ -z "${NC}" ]
  then
    echo "no 'nc' found. please install openbsd-netcat first"
    exit ${E_CRITICAL}
  fi
}

check_redis() {
  host=${redis_host:=127.0.0.1}
  port=${redis_port:=6379}

  output=$(echo 'info' | nc -w1 $redis_host $redis_port)
  if [[ $? -ne 0 ]] || [[ -z  $output ]]; then
    echo "CRITICAL - could not connect to redis on ${redis_host}:${redis_port}"
    exit 2
  fi

  used_memory_human=$(echo "$output" | awk -F ":" '$1 == "used_memory_human" {print $2}'|sed -e 's/\r//')
  instantaneous_ops_per_sec=$(echo "$output" | awk -F : '$1 == "instantaneous_ops_per_sec" {print $2}')

  if [[ -z $used_memory_human ]] || [[ -z  $instantaneous_ops_per_sec ]]; then
    echo "CRITICAL - could not fetch redis stats on ${redis_host}:${redis_port}"
    exit 2
  fi

  echo "OK - Redis Memory: ${used_memory_human}, Ops/s: ${instantaneous_ops_per_sec}"
  exit 0
}

check_dependency
check_redis
