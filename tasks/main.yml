---

# redhat based
#
- block:
    #
    - name: Import EPEL GPG key.
      rpm_key:
        key: https://archive.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-{{ ansible_distribution_major_version }}
        state: present

    - name: install EPEL repository
      yum_repository:
        name: epel
        state: present
        description: Extra Packages for Enterprise Linux {{ ansible_distribution_major_version }} - $basearch
        baseurl: http://download.fedoraproject.org/pub/epel/{{ ansible_distribution_major_version }}/$basearch
        gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-{{ ansible_distribution_major_version }}
        metalink: https://mirrors.fedoraproject.org/metalink?repo=epel-{{ ansible_distribution_major_version }}&arch=$basearch&infra=$infra&content=$contentdir
        failovermethod: priority
        gpgcheck: 1
        enabled: 1

    # - name: update rpm cache  # noqa 303
    #   command: yum clean metadata
    #   args:
    #     warn: false

  when: ansible_os_family | lower == 'redhat'

- block:
    - name: define OS related monitoring plugins (debian)
      set_fact:
        monitoring_plugins: "{{ monitoring_plugins_debian + monitoring_plugins | default([]) }}"
  when:
    - ansible_os_family | lower == 'debian'

- block:
    - name: define OS related monitoring plugins (redhat)
      set_fact:
        monitoring_plugins: "{{ monitoring_plugins_redhat + monitoring_plugins | default([]) }}"
  when:
    - ansible_os_family | lower == 'redhat'

- name: remove blacklisted plugins
  set_fact:
    monitoring_plugins: "{{ monitoring_plugins | difference(monitoring_plugins_blacklist) }}"
  when: monitoring_plugins_blacklist is defined and monitoring_plugins_blacklist | count != 0

- name: install monitoring plugins
  package:
    name: "{{ monitoring_plugins }}"
    state: present

- name: ensure plugins directory exists
  file:
    dest: "{{ monitoring_plugins_directory }}"
    state: directory
    mode: 0755

- name: create generic link for {{ monitoring_plugins_directory }}
  file:
    src: "{{ monitoring_plugins_directory }}"
    dest: /usr/lib/monitoring-plugins
    state: link
  when: ansible_os_family | lower != 'archlinux'

- name: copy extra check plugins
  copy:
    src: plugins/{{ item }}
    dest: "{{ monitoring_plugins_directory }}"
    mode: 0755
  loop:
    "{{ monitoring_plugins_extra }}"

- name: download extra plugins
  get_url:
    url: "{{ item.url }}"
    dest: "{{ monitoring_plugins_directory }}/{{ item.dest }}"
    mode: 0755
    checksum: "{{ item.checksum | default(omit) }}"
    validate_certs: "{{ item.validate | default(true) }}"
  with_items:
    "{{ monitoring_plugins_download }}"
  when: monitoring_plugins_download is defined and monitoring_plugins_download != []

#
# - name: install extra plugins dependency
#   pip:
#     name: "{{ item.dependencies.pip }}"
# #    dest: '{{ monitoring_plugins_directory }}/{{ item.dest }}'
# #    mode: '0755'
# #    checksum: '{{ item.checksum }}'
# #    validate_certs: '{{ item.validate | default(true) }}'
#   with_items:
#     "{{ icinga2_plugins_download }}"
#   when: (
#     icinga2_plugins_download is defined and icinga2_plugins_download != [] and
#     icinga2_plugins_download.dependencies is defined and
#     icinga2_plugins_download.dependencies.pip is defined )
#     # icinga2_plugins_download.dependencies.pip != [] )
